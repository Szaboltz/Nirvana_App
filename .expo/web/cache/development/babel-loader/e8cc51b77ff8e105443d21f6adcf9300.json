{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Projeto = function (_Component) {\n  _inherits(Projeto, _Component);\n  var _super = _createSuper(Projeto);\n  function Projeto(props) {\n    var _this;\n    _classCallCheck(this, Projeto);\n    _this = _super.call(this, props);\n    _this.state = {\n      imagem: 'smile.png',\n      texto: 'Logo da banda'\n    };\n\n    _this.mudarImagemG = _this.mudarImagemG.bind(_assertThisInitialized(_this));\n    _this.mudarImagemB = _this.mudarImagemB.bind(_assertThisInitialized(_this));\n    _this.mudarImagemBT = _this.mudarImagemBT.bind(_assertThisInitialized(_this));\n    _this.mudarImagemGB = _this.mudarImagemGB.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Projeto, [{\n    key: \"mudarImagemG\",\n    value:\n    function mudarImagemG() {\n      var s = this.state;\n      s.imagem = 'kurt.jpg';\n      s.texto = 'Kurt Cobain';\n      this.setState(s);\n    }\n  }, {\n    key: \"mudarImagemB\",\n    value: function mudarImagemB() {\n      var s = this.state;\n      s.imagem = 'krist.jpg';\n      s.texto = 'Krist Novoselic';\n      this.setState(s);\n    }\n  }, {\n    key: \"mudarImagemBT\",\n    value: function mudarImagemBT() {\n      var s = this.state;\n      s.imagem = 'dave.jpg';\n      s.texto = 'Dave Grohl';\n\n      this.setState(s);\n    }\n  }, {\n    key: \"mudarImagemGB\",\n    value: function mudarImagemGB() {\n      var s = this.state;\n      s.imagem = 'pat.jpg';\n      s.texto = 'Pat Smear';\n\n      this.setState(s);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.body,\n        children: [\" \", _jsx(Image, {\n          style: styles.logo,\n          source: require(\"./img/nirvana_logo.png\")\n        }), \" \", _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.titulo,\n            children: \"Escolha uma das op\\xE7\\xF5es\"\n          }), \" \"]\n        }), _jsxs(View, {\n          style: styles.cima,\n          children: [\" \", _jsx(TouchableOpacity, {\n            style: styles.botao,\n            title: \"Guitarrista\",\n            onPress: this.mudarImagemG,\n            children: _jsx(Text, {\n              children: \"Guitarrista\"\n            })\n          }), \" \", _jsx(TouchableOpacity, {\n            style: styles.botao,\n            title: \"Baixista\",\n            onPress: this.mudarImagemB,\n            children: _jsx(Text, {\n              children: \"Guitarrista\"\n            })\n          }), \" \", _jsx(TouchableOpacity, {\n            style: styles.botao,\n            title: \"Baterista\",\n            onPress: this.mudarImagemBT,\n            children: _jsx(Text, {\n              children: \"Guitarrista\"\n            })\n          }), \" \", _jsx(TouchableOpacity, {\n            style: styles.botao,\n            title: \"Guitarrista Base\",\n            onPress: this.mudarImagemGB,\n            children: _jsx(Text, {\n              children: \"Guitarrista\"\n            })\n          }), \" \"]\n        }), _jsxs(View, {\n          style: styles.photo,\n          children: [_jsx(Image, {\n            style: styles.smile,\n            source: require('./img/' + this.state.imagem)\n          }), \" \"]\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.pe,\n            children: this.state.texto\n          }), \" \"]\n        })]\n      });\n    }\n  }]);\n  return Projeto;\n}(Component);\nexport { Projeto as default };\nvar styles = StyleSheet.create({\n  body: {\n    paddingTop: 45,\n    backgroundColor: '#000000',\n    flex: 3,\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n\n  logo: {\n    height: 100,\n    width: 300,\n    marginTop: 10,\n    zIndex: 0\n  },\n  titulo: {\n    padding: 20,\n    color: '#ffffff',\n    fontSize: 20\n  },\n\n  cima: {\n    flexDirection: 'row'\n  },\n\n  botao: {\n    alignContent: 'space-around',\n    backgroundColor: '#1e90ff',\n    borderRadius: 50,\n    padding: 10,\n    margin: 10,\n    flexBasis: 90,\n    fontFamily: 'arial'\n  },\n\n  smile: {\n    height: 300,\n    width: 300,\n    marginTop: 10,\n    zIndex: 0,\n    alignItems: 'flex-end'\n  },\n\n  photo: {\n    padding: 40\n  },\n\n  pe: {\n    color: '#ffffff',\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["React","Component","Projeto","props","state","imagem","texto","mudarImagemG","bind","mudarImagemB","mudarImagemBT","mudarImagemGB","s","setState","styles","body","logo","require","titulo","cima","botao","photo","smile","pe","StyleSheet","create","paddingTop","backgroundColor","flex","alignItems","flexDirection","height","width","marginTop","zIndex","padding","color","fontSize","alignContent","borderRadius","margin","flexBasis","fontFamily"],"sources":["C:/Users/cg3007839/Documents/Projeto/Nirvana/App.js"],"sourcesContent":["// Importa o React, e seu componente principal\nimport React, { Component } from 'react'; \n// Tem que exportar os componentes usados no código, que já existem no react\nimport { View, Text, StyleSheet, Image, TouchableOpacity} from 'react-native';\n\n// Criar o componente principal do projeto\nexport default class Projeto extends Component {\n\n   // Habilitar a alteração das props por meio das states\n  constructor(props){\n    super(props); //Props é um dos componentes pré criados do React, tanto que nem importamos ele.\n    this.state = {imagem: 'smile.png', texto: 'Logo da banda'}; // Definição das states, que é a mesma que variáveis - Aqui definimos o valor dela a imagem smile, o valor padrão dela é a imagem\n\n    // Habilitar a alteração dos valores das states pela função mudarImagem, ou seja a função irá mudar o valor da state\n    this.mudarImagemG = this.mudarImagemG.bind(this); \n    this.mudarImagemB = this.mudarImagemB.bind(this);\n    this.mudarImagemBT = this.mudarImagemBT.bind(this);\n    this.mudarImagemGB = this.mudarImagemGB.bind(this);\n  }\n\n  // Quando o botão é pressioando, essa função função acontece \n  mudarImagemG(){\n    let s = this.state; // Varíavél que recebe o valor padrão da state\n    s.imagem = 'kurt.jpg' // Variável que recebe a imagem 'kurt.jpg'\n    s.texto = 'Kurt Cobain' // Variável que recebe o texto 'Kurt Cobain'\n    this.setState(s) // Substituição do novo valor a state\n  }\n\n  mudarImagemB(){\n    let s = this.state; // Varíavél que recebe o valor padrão da state\n    s.imagem = 'krist.jpg' // Variável que recebe a imagem 'krist.jpg'\n    s.texto = 'Krist Novoselic' // Variável que recebe o texto 'Krist Novoselic'\n    this.setState(s) // Substituição do novo valor a state\n  }\n\n  mudarImagemBT(){\n    let s = this.state; // Varíavél que recebe o valor padrão da state\n    s.imagem = 'dave.jpg' // Variável que recebe a imagem 'dave.jpg'\n    s.texto = 'Dave Grohl' // Variável que recebe o texto 'Dave Grohl'\n\n    this.setState(s) // Substituição do novo valor a state\n  }\n\n  mudarImagemGB(){\n    let s = this.state; // Varíavél que recebe o valor padrão da state\n    s.imagem = 'pat.jpg' // Variável que recebe a imagem 'pat.jpg'\n    s.texto = 'Pat Smear' // Variável que recebe o texto 'Pat Smear'\n\n    this.setState(s) // Substituição do novo valor a state\n  }\n\n  render(){ // Usado para rederizar o conteúdo na tela do usuário\n    return( // Retorna todo o conteúdo do render \n      <View style={styles.body}> {/* View principal do projeto, aqui vai todos os outros componentes que serão usados no projeto */}\n\n        <Image style={styles.logo} source={require('./img/nirvana_logo.png')}/> {/* A imagem logo do código - Essa tag tem fechamento nela mesma e está usando o componente style para estilização */}\n\n        <View>\n          <Text style={styles.titulo}>Escolha uma das opções</Text> {/* Texto título do código */}\n        </View>\n\n          {/* Parte principal do código - Aqui estão os botões que serão associados a função onPress, ao pressionar o botão algo acontecerá. */}\n          <View style={styles.cima}> {/* TouchableOpacity é um tipo de botão que permite várias estilos */}\n            <TouchableOpacity style={styles.botao} title=\"Guitarrista\" onPress={this.mudarImagemG}><Text>Guitarrista</Text></TouchableOpacity> {/* A função onPress recebe a função criada pelo programador 'mudarImagemG' */}\n            <TouchableOpacity  style={styles.botao} title=\"Baixista\" onPress={this.mudarImagemB}><Text>Guitarrista</Text></TouchableOpacity> {/* A função onPress recebe a função criada pelo programador 'mudarImagemB' */}\n            <TouchableOpacity style={styles.botao} title=\"Baterista\" onPress={this.mudarImagemBT}><Text>Guitarrista</Text></TouchableOpacity> {/* A função onPress recebe a função criada pelo programador 'mudarImagemBT' */}\n            <TouchableOpacity  style={styles.botao} title=\"Guitarrista Base\" onPress={this.mudarImagemGB}><Text>Guitarrista</Text></TouchableOpacity> {/* A função onPress recebe a função criada pelo programador 'mudarImagemGB' */}\n          </View>\n      \n        <View style={styles.photo}>\n          <Image style={styles.smile} source={require('./img/' + this.state.imagem)}/> {/* A imagem que vai ser substituida é concatenada ao valor padrão da state */}\n        </View>\n\n        <View>\n          <Text style={styles.pe}>{this.state.texto}</Text> {/* O texto que vai ser substituido por um novo texto pela função */}\n        </View>\n       \n      </View> // Fim da View principal do código\n    );\n  }\n}\n\nconst styles = StyleSheet.create({ // Constante do grupo de estilos, que permitirá estilizar o código\n  body:{ // Estilo da View principal do código\n    paddingTop: 45, // Distância com o topo da página\n    backgroundColor: '#000000', // Muda a cor de fundo\n    flex: 3, // Fornece o mesmo espaço a todos os elementos do código\n    alignItems: 'center', // Pega todos os itens e alinha no centro\n    flexDirection: 'column', // Pega todos os itens e os alinha em coluna\n\n  },\n   logo:{ // Estilo da logo da página\n    height: 100, // Altera a altura da imagem\n    width: 300, // Altera a largura da página\n    marginTop: 10, // Distância da imagem com o topo da página\n    zIndex:0 \n\n  },\n  titulo:{ // Estilo di texto título da página\n    padding: 20, // Distância do texto com a imagem \n    color: '#ffffff', // Cor do texto\n    fontSize: 20, // Tamanho da fonte\n\n  },\n  cima:{ // Estilo da view dis botões\n    flexDirection: 'row', // Deixa todos os elementos da view em linha\n\n  },\n  botao:{ // Estilo dos botões\n    alignContent: 'space-around', // Aplica a mesma distância entre os botões e o restante da página\n    backgroundColor: '#1e90ff', // Cor do botão\n    borderRadius: 50, // Deixa a borda do botão redonda\n    padding: 10,\n    margin: 10, // espaço entre os botões\n    flexBasis: 90,\n    fontFamily: 'arial' // Tipo de fonte\n  },\n  smile:{ // Estilo da imagem que  será alterada\n    height: 300, // Altera a altura da imagem\n    width: 300, // Altera a largura da página\n    marginTop: 10, // Distância da imagem com o topo da página\n    zIndex:0,\n    alignItems: 'flex-end', // Deixa a imagem no fim da página\n\n  },\n  photo:{ // Estilo da view da imagem que vai ser alterada\n    padding: 40 // Distância da imagem com o elemento de cima\n\n  },\n  pe:{ // Estilo do texto do fim da página\n    color: '#ffffff', // Cor da fonte\n    fontSize: 18 // Tamanho da fonte\n  }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}